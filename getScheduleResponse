try { 
    // PARALLEL API CALLS
    CompletableFuture<Map<String, String>> filingFuture = CompletableFuture.supplyAsync(() -> 
        getFilingIndicators(firmDataItemIdList));
    
    CompletableFuture<Map<String, String>> xbrlErrorFuture = CompletableFuture.supplyAsync(() -> 
        getXbrlErrorFlag(firmDataItemIdListForErrFlag));
    
    // HANDLE RESULTS WITH TIMEOUT
    Map<String, String> result = new HashMap<>();
    Map<String, String> xbrlErrorMap = new HashMap<>();
    
    try {
        result = filingFuture.get(30, TimeUnit.SECONDS);
    } catch (TimeoutException e) {
        LOGGER.warn("Filing indicators API timed out", e);
        filingFuture.cancel(true);
    } catch (Exception e) {
        LOGGER.error("Error getting filing indicators", e);
    }
    
    try {
        xbrlErrorMap = xbrlErrorFuture.get(30, TimeUnit.SECONDS);
    } catch (TimeoutException e) {
        LOGGER.warn("XBRL error API timed out", e);
        xbrlErrorFuture.cancel(true);
    } catch (Exception e) {
        LOGGER.error("Error getting XBRL errors", e);
    }
    
    Map<String, Map<String, Object>> dataItemDetailsForRep = new HashMap<>(); 
    Map<String, Map<String, Object>> submittedDataItemDetailsForRep = new HashMap<>();
